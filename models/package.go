// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Package package
// swagger:model Package
type Package struct {

	// key
	Key string `json:"Key,omitempty"`

	// 包名
	IPName string `json:"IpName,omitempty"`

	// 版本号
	IPVersion string `json:"IpVersion,omitempty"`

	// pkgPath
	IPPath string `json:"IpPath,omitempty"`	 //add1

	// subsys's owner
	IPPerson string `json:"IpPerson,omitempty"` //add2
	
	// 描述
	IPDescription string `json:"IpDescription,omitempty"`

	// 容器同步状在(未开始|同步中|同步完成)
	IPStatus string `json:"IpStatus,omitempty"`

	// 类型(容器|二进制)
	IPType string `json:"IpType,omitempty"`

	// 操作人
	IPOperPerson string `json:"IpOperPerson,omitempty"`

	// Ip oper time
	// Format: date-time
	IPOperTime strfmt.DateTime `json:"IpOperTime,omitempty"`

}

// Validate validates this package
func (m *Package) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPOperTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Package) validateIPOperTime(formats strfmt.Registry) error {

	if swag.IsZero(m.IPOperTime) { // not required
		return nil
	}

	if err := validate.FormatOf("IpOperTime", "body", "date-time", m.IPOperTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Package) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Package) UnmarshalBinary(b []byte) error {
	var res Package
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
